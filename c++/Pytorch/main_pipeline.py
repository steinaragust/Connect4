from train import train_dataset
from resnet import board_data, ResNet
from utils import encode_for_training
from torch.utils.data import DataLoader
import numpy as np

arr = np.array([
                [
                [1,1,2,1,2,1,0],
                [0,1,2,2,1,0,0],
                [0,0,2,2,1,0,0],
                [0,0,1,2,1,0,0],
                [0,0,0,2,2,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [1,1,2,1,2,2,2],
                [1,2,1,2,2,2,1],
                [1,1,2,2,1,1,1],
                [2,0,1,2,2,2,1],
                [1,0,2,1,1,1,2],
                [1,0,2,2,0,1,0],
                ],
                [
                [2,1,1,2,1,1,2],
                [2,2,1,2,1,1,2],
                [1,1,2,2,2,1,1],
                [1,0,2,1,1,2,0],
                [1,0,1,1,2,1,0],
                [2,0,2,2,2,2,0],
                ],
                [
                [1,2,1,2,1,1,1],
                [1,0,2,0,1,0,1],
                [2,0,2,0,2,0,0],
                [2,0,1,0,2,0,0],
                [2,0,0,0,1,0,0],
                [2,0,0,0,0,0,0],
                ],
                [
                [2,2,1,1,1,2,0],
                [0,2,2,1,1,1,0],
                [0,2,1,1,1,0,0],
                [0,1,0,2,2,0,0],
                [0,2,0,2,1,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,2,0,1,2,0,0],
                [1,1,0,1,0,0,0],
                [1,2,0,1,0,0,0],
                [2,0,0,1,0,0,0],
                [2,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,1,1,1,2,1,2],
                [1,2,2,1,2,1,2],
                [1,2,1,2,2,1,2],
                [2,2,2,1,1,2,1],
                [0,0,1,1,2,2,0],
                [0,0,1,1,0,1,0],
                ],
                [
                [0,1,1,1,1,2,2],
                [0,0,0,0,2,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,1,1,2,0,2,1],
                [2,1,2,1,0,1,2],
                [2,1,2,2,0,2,0],
                [0,1,1,1,0,1,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,1,2,1,1,1,2],
                [2,2,1,1,1,2,2],
                [1,1,2,2,1,1,1],
                [2,2,1,1,2,1,1],
                [2,1,1,2,0,0,0],
                [0,2,2,2,0,0,0],
                ],
                [
                [2,2,0,1,2,1,2],
                [2,1,0,1,1,2,1],
                [2,1,0,2,2,1,1],
                [1,2,0,1,2,1,0],
                [2,1,0,2,1,2,0],
                [0,2,0,1,1,0,0],
                ],
                [
                [1,1,2,1,2,2,2],
                [0,0,1,2,1,1,0],
                [0,0,1,1,2,2,0],
                [0,0,2,1,1,1,0],
                [0,0,0,2,0,2,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [1,2,2,1,1,1,2],
                [0,0,2,2,2,1,1],
                [0,0,0,2,2,2,1],
                [0,0,0,1,2,1,0],
                [0,0,0,0,1,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [0,2,2,1,1,1,1],
                [0,0,0,0,2,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [1,1,2,1,2,1,0],
                [0,1,2,2,2,2,0],
                [0,0,1,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [0,1,2,1,2,0,2],
                [0,0,2,1,0,0,0],
                [0,0,0,1,0,0,0],
                [0,0,0,1,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [1,2,2,2,2,1,0],
                [0,0,1,0,0,0,0],
                [0,0,1,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,1,1,1,1,2,0],
                [0,0,0,0,0,2,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [
                [2,0,1,2,1,2,2],
                [0,0,1,1,2,2,2],
                [0,0,2,2,1,1,0],
                [0,0,1,2,1,2,0],
                [0,0,1,1,1,1,0],
                [0,0,0,2,0,1,0],
                ],
                [
                [1,0,2,2,2,2,1],
                [0,0,0,0,0,1,0],
                [0,0,0,0,0,1,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0],
                ],
                [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0]
                ], dtype=object
)

p_values = np.array([[0.0788, 0.1832, 0.0895, 0.2085, 0.1741, 0.1060, 0.1599],
        [0.0843, 0.1194, 0.0539, 0.1999, 0.1819, 0.2135, 0.1471],
        [0.0449, 0.1293, 0.0766, 0.1874, 0.2746, 0.1761, 0.1112],
        [0.0703, 0.1295, 0.1049, 0.2999, 0.1920, 0.1155, 0.0880],
        [0.0713, 0.1842, 0.1359, 0.2130, 0.1260, 0.1855, 0.0841],
        [0.0884, 0.1164, 0.1629, 0.2139, 0.1338, 0.1679, 0.1166],
        [0.0957, 0.1633, 0.1084, 0.1306, 0.1995, 0.1926, 0.1099],
        [0.1073, 0.1940, 0.1073, 0.2058, 0.1203, 0.1343, 0.1310],
        [0.0447, 0.2527, 0.0725, 0.2052, 0.1804, 0.1149, 0.1297],
        [0.0390, 0.1444, 0.0976, 0.1983, 0.2072, 0.2270, 0.0864],
        [0.0399, 0.1226, 0.0880, 0.2754, 0.1693, 0.1772, 0.1277],
        [0.0808, 0.2439, 0.0771, 0.2809, 0.1091, 0.1235, 0.0848],
        [0.0958, 0.1267, 0.1959, 0.1408, 0.2487, 0.0823, 0.1097],
        [0.0965, 0.1623, 0.1068, 0.1979, 0.1458, 0.1609, 0.1297],
        [0.1214, 0.1942, 0.1427, 0.1811, 0.1107, 0.1304, 0.1195],
        [0.0849, 0.1312, 0.1619, 0.2215, 0.1234, 0.1503, 0.1269],
        [0.1071, 0.1630, 0.1427, 0.2124, 0.1488, 0.1077, 0.1182],
        [0.0718, 0.1902, 0.1269, 0.2021, 0.1376, 0.1772, 0.0942],
        [0.1642, 0.1092, 0.1049, 0.1836, 0.1356, 0.1444, 0.1582],
        [0.0849, 0.1713, 0.1175, 0.1824, 0.0789, 0.1993, 0.1656]], dtype=float)

v_values = np.array([-0.0367,
        -0.1132,
        -0.1674,
        -0.2383,
        -0.1550,
        -0.1499,
        -0.0872,
        -0.0135,
        -0.1255,
        -0.2459,
        -0.1322,
        -0.1134,
        -0.2970,
        -0.0201,
        -0.0458,
        -0.0325,
        -0.0412,
        -0.0109,
        -0.0487,
        0.0777], dtype=float)

encoded = encode_for_training(arr)

dataset_values = []

for i in range(0, len(arr) - 1):
    dataset_values.append((encoded[i], p_values[i], v_values[i]))

test_set = board_data(np.array(dataset_values, dtype=object))

train_loader = DataLoader(test_set, batch_size=4, shuffle=False, num_workers=0, pin_memory=False)

model = ResNet()

train_dataset(train_loader, model, 0)
